# WARNING PLUGIN
# Pretty much the exact same as the current warn plugin where mods/wardens
# can use /warn [username] [reason] to mute a player, with longer mutes
# for additional warnings. One big difference between this version and
# that one is that this one has a check that should prevent 100% of double
# warns.

# The mute times are the exact same as on current KDC, as with the messages.
# People who get warned get a message telling them how many warnings they
# have, and a link to the rules.

options:
	rules_link: bit.ly/KDC-rules
command /warn <player> <text>:
	permission: kdc.mod
	usage: /warn [username] [reason]
	description: Warn a player which then mutes them for a given amount of time.
	trigger:
		# Check to see if the player has just been warned
		if {justwarned.%arg 1%} is not set:
			set {justwarned.%arg 1%} to false
		if {justwarned.%arg 1%} is false:
			set {justwarned.%arg 1%} to true
			set {warntime.%arg 1%} to now
			# Broadcast the warning to the server
			broadcast "&6* &c%arg 1% &7has just recieved a &cWARNING: &f%arg 2%"

			# First warning - 30 minute mute.
			if {warnings.%arg 1%} is 0:
				execute the command "/tempmute %arg 1% 30m Warning"
				send "&8[&4*&8]&7 You now have &c1 warning." to arg 1
				send "&8[&4*&8]&7 Please review the rules at &b&n{@rules_link}" to arg 1
				send "&8[&4*&8]&7 %arg 1% has been muted for 30 minutes and has 1 warning." to command executor
				set {warning1time.%arg 1%} to now
				add 1 to {warnings.%arg 1%}
				stop

			# Second warning - 3 hour mute
			if {warnings.%arg 1%} is 1:
				execute the command "/tempmute %arg 1% 3h Warning"
				send "&8[&4*&8]&7 You now have &c2 warnings." to arg 1
				send "&8[&4*&8]&7 Please review the rules at &b&n{@rules_link}" to arg 1
				send "&8[&4*&8]&7 %arg 1% has been muted for 3 hours and has 2 warnings." to command executor
				set {warning2time.%arg 1%} to now
				add 1 to {warnings.%arg 1%}
				stop

			# Third warning - 1 day mute
			if {warnings.%arg 1%} is 2:
				execute the command "/tempmute %arg 1% 1d Warning"
				send "&8[&4*&8]&7 You now have &c3 warnings." to arg 1
				send "&8[&4*&8]&7 Please review the rules at &b&n{@rules_link}" to arg 1
				send "&8[&4*&8]&7 %arg 1% has been muted for 1 day and has 3 warnings." to command executor
				set {warning3time.%arg 1%} to now
				add 1 to {warnings.%arg 1%}
				stop

			# Fourth warning - 3 day mute
			if {warnings.%arg 1%} is 3:
				execute the command "/tempmute %arg 1% 3d Warning"
				send "&8[&4*&8]&7 You now have &c4 warnings." to arg 1
				send "&8[&4*&8]&7 Please review the rules at &b&n{@rules_link}" to arg 1
				send "&8[&4*&8]&7 %arg 1% has been muted for 3 days and has 4 warnings." to command executor
				set {warning4time.%arg 1%} to now
				add 1 to {warnings.%arg 1%}
				stop

			# Fifth and greater warning - 30 day mute, does 3.9 because
			# equal to or greater than 4 wasn't working.
			if {warnings.%arg 1%} is greater than 3.9:
				execute the command "/tempmute %arg 1% 30d Warning"
				send "&8[&4*&8]&7 You now have &c5 warnings." to arg 1
				send "&8[&4*&8]&7 Please review the rules at &b&n{@rules_link}" to arg 1
				send "&8[&4*&8]&7 %arg 1% has been muted for 30 days and has 5 warnings." to command executor
				set {warning5time.%arg 1%} to now
				add 1 to {warnings.%arg 1%}
				stop
		else:
			# If player was just warned, let the mod know.
			send "&8[&4!&8]&7 That player was just warned!" to command executor

# Every hour the plugin checks to see if there should be any warnings that are
# set to expire, and if there are then it lowers the player's warn count by 1.
every 1 hour:
	loop all players:
		if difference between {warning1time.%loop-player%} and now is greater than or equal to 30 days:
			subtract 1 from {warnings.%loop-player%}
		if difference between {warning2time.%loop-player%} and now is greater than or equal to 30 days:
			subtract 1 from {warnings.%loop-player%}
		if difference between {warning3time.%loop-player%} and now is greater than or equal to 30 days:
			subtract 1 from {warnings.%loop-player%}
		if difference between {warning4time.%loop-player%} and now is greater than or equal to 30 days:
			subtract 1 from {warnings.%loop-player%}
		if difference between {warning5time.%loop-player%} and now is greater than or equal to 30 days:
			subtract 1 from {warnings.%loop-player%}

# Every 10 minutes the plugin checks to see if there's anyone that is marked
# as just warned that should be switched to warnable.
every 10 minutes:
	loop all players:
		if difference between {warntime.%loop-player%} and now is greater than or equal to 1 minute:
			set {justwarned.%loop-player%} to false

# In case mistakes happen, there's still a delete warning command for the wardens.
command /dwarn <player>:
	permission: kdc.admin
	aliases: /deletewarn
	usage: /dwarn [username]
	description: Remove a warning from a player.
	trigger:
		if {warnings.%arg 1%} is 0:
			send "&8[&4!&8]&7 That player doesn't have any warnings."
		else:
			subtract 1 from {warnings.%arg 1%}
			send "&8[&2!&8]&7 1 warning removed from &b%arg 1%&7. &o(%{warnings.%arg 1%}% warnings remain)"

# If for some reason the no double warn system is bugging out, just force the warning.
command /forcewarn <player> <text>:
	permission: kdc.admin
	usage: /forcewarn [username] [reason]
	description: In case a player needs to be warned, but the warning cooldown isn't working, then a warden can use /forcewarn.
	trigger:
		set {justwarned.%arg 1%} to true
		set {warntime.%arg 1%} to now
		# Broadcast the warning to the server
		broadcast "&6* &c%arg 1% &7has just recieved a &cWARNING: &f%arg 2%"

		# First warning - 30 minute mute.
		if {warnings.%arg 1%} is 0:
			execute the command "/tempmute %arg 1% 30m Warning"
			send "&8[&4*&8]&7 You now have &c1 warning." to arg 1
			send "&8[&4*&8]&7 Please review the rules at &b&n{@rules_link}" to arg 1
			send "&8[&4*&8]&7 %arg 1% has been muted for 30 minutes and has 1 warning." to command executor
			set {warning1time.%arg 1%} to now
			add 1 to {warnings.%arg 1%}
			stop

		# Second warning - 3 hour mute
		if {warnings.%arg 1%} is 1:
			execute the command "/tempmute %arg 1% 3h Warning"
			send "&8[&4*&8]&7 You now have &c2 warnings." to arg 1
			send "&8[&4*&8]&7 Please review the rules at &b&n{@rules_link}" to arg 1
			send "&8[&4*&8]&7 %arg 1% has been muted for 3 hours and has 2 warnings." to command executor
			set {warning2time.%arg 1%} to now
			add 1 to {warnings.%arg 1%}
			stop

		# Third warning - 1 day mute
		if {warnings.%arg 1%} is 2:
			execute the command "/tempmute %arg 1% 1d Warning"
			send "&8[&4*&8]&7 You now have &c3 warnings." to arg 1
			send "&8[&4*&8]&7 Please review the rules at &b&n{@rules_link}" to arg 1
			send "&8[&4*&8]&7 %arg 1% has been muted for 1 day and has 3 warnings." to command executor
			set {warning3time.%arg 1%} to now
			add 1 to {warnings.%arg 1%}
			stop

		# Fourth warning - 3 day mute
		if {warnings.%arg 1%} is 3:
			execute the command "/tempmute %arg 1% 3d Warning"
			send "&8[&4*&8]&7 You now have &c4 warnings." to arg 1
			send "&8[&4*&8]&7 Please review the rules at &b&n{@rules_link}" to arg 1
			send "&8[&4*&8]&7 %arg 1% has been muted for 3 days and has 4 warnings." to command executor
			set {warning4time.%arg 1%} to now
			add 1 to {warnings.%arg 1%}
			stop

		# Fifth and greater warning - 30 day mute, does 3.9 because
		# equal to or greater than 4 wasn't working.
		if {warnings.%arg 1%} is greater than 3.9:
			execute the command "/tempmute %arg 1% 30d Warning"
			send "&8[&4*&8]&7 You now have &c5 warnings." to arg 1
			send "&8[&4*&8]&7 Please review the rules at &b&n{@rules_link}" to arg 1
			send "&8[&4*&8]&7 %arg 1% has been muted for 30 days and has 5 warnings." to command executor
			set {warning5time.%arg 1%} to now
			add 1 to {warnings.%arg 1%}
			stop